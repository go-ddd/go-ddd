// Code generated by ent, DO NOT EDIT.

package event

import (
	"time"
)

const (
	// Label holds the string label denoting the event type in the database.
	Label = "event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAggregateID holds the string denoting the aggregate_id field in the database.
	FieldAggregateID = "aggregate_id"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldAggregateType holds the string denoting the aggregate_type field in the database.
	FieldAggregateType = "aggregate_type"
	// FieldOrgID holds the string denoting the org_id field in the database.
	FieldOrgID = "org_id"
	// FieldInstanceID holds the string denoting the instance_id field in the database.
	FieldInstanceID = "instance_id"
	// FieldMetadata holds the string denoting the metadata field in the database.
	FieldMetadata = "metadata"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldSequence holds the string denoting the sequence field in the database.
	FieldSequence = "sequence"
	// FieldPreviousAggregateSequence holds the string denoting the previous_aggregate_sequence field in the database.
	FieldPreviousAggregateSequence = "previous_aggregate_sequence"
	// FieldPreviousAggregateTypeSequence holds the string denoting the previous_aggregate_type_sequence field in the database.
	FieldPreviousAggregateTypeSequence = "previous_aggregate_type_sequence"
	// FieldService holds the string denoting the service field in the database.
	FieldService = "service"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// Table holds the table name of the event in the database.
	Table = "events"
)

// Columns holds all SQL columns for event fields.
var Columns = []string{
	FieldID,
	FieldAggregateID,
	FieldVersion,
	FieldCreator,
	FieldType,
	FieldAggregateType,
	FieldOrgID,
	FieldInstanceID,
	FieldMetadata,
	FieldData,
	FieldSequence,
	FieldPreviousAggregateSequence,
	FieldPreviousAggregateTypeSequence,
	FieldService,
	FieldCreateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// AggregateIDValidator is a validator for the "aggregate_id" field. It is called by the builders before save.
	AggregateIDValidator func(string) error
	// VersionValidator is a validator for the "version" field. It is called by the builders before save.
	VersionValidator func(string) error
	// CreatorValidator is a validator for the "creator" field. It is called by the builders before save.
	CreatorValidator func(string) error
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// AggregateTypeValidator is a validator for the "aggregate_type" field. It is called by the builders before save.
	AggregateTypeValidator func(string) error
	// OrgIDValidator is a validator for the "org_id" field. It is called by the builders before save.
	OrgIDValidator func(string) error
	// InstanceIDValidator is a validator for the "instance_id" field. It is called by the builders before save.
	InstanceIDValidator func(string) error
	// ServiceValidator is a validator for the "service" field. It is called by the builders before save.
	ServiceValidator func(string) error
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
