// Code generated by ent, DO NOT EDIT.

package do

import (
	"time"

	"github.com/galaxyobe/go-ddd/pkg/domain/eventsouring/repository/do/event"
	"github.com/galaxyobe/go-ddd/pkg/domain/eventsouring/repository/do/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	eventMixin := schema.Event{}.Mixin()
	eventMixinFields0 := eventMixin[0].Fields()
	_ = eventMixinFields0
	eventMixinFields1 := eventMixin[1].Fields()
	_ = eventMixinFields1
	eventMixinFields2 := eventMixin[2].Fields()
	_ = eventMixinFields2
	eventMixinFields3 := eventMixin[3].Fields()
	_ = eventMixinFields3
	eventMixinFields4 := eventMixin[4].Fields()
	_ = eventMixinFields4
	eventMixinFields5 := eventMixin[5].Fields()
	_ = eventMixinFields5
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescAggregateID is the schema descriptor for aggregate_id field.
	eventDescAggregateID := eventMixinFields1[0].Descriptor()
	// event.AggregateIDValidator is a validator for the "aggregate_id" field. It is called by the builders before save.
	event.AggregateIDValidator = eventDescAggregateID.Validators[0].(func(string) error)
	// eventDescOrgID is the schema descriptor for org_id field.
	eventDescOrgID := eventMixinFields2[0].Descriptor()
	// event.OrgIDValidator is a validator for the "org_id" field. It is called by the builders before save.
	event.OrgIDValidator = eventDescOrgID.Validators[0].(func(string) error)
	// eventDescInstanceID is the schema descriptor for instance_id field.
	eventDescInstanceID := eventMixinFields3[0].Descriptor()
	// event.InstanceIDValidator is a validator for the "instance_id" field. It is called by the builders before save.
	event.InstanceIDValidator = eventDescInstanceID.Validators[0].(func(string) error)
	// eventDescVersion is the schema descriptor for version field.
	eventDescVersion := eventMixinFields4[0].Descriptor()
	// event.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	event.VersionValidator = func() func(string) error {
		validators := eventDescVersion.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(version string) error {
			for _, fn := range fns {
				if err := fn(version); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// eventDescCreator is the schema descriptor for creator field.
	eventDescCreator := eventMixinFields5[0].Descriptor()
	// event.CreatorValidator is a validator for the "creator" field. It is called by the builders before save.
	event.CreatorValidator = eventDescCreator.Validators[0].(func(string) error)
	// eventDescType is the schema descriptor for type field.
	eventDescType := eventFields[0].Descriptor()
	// event.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	event.TypeValidator = eventDescType.Validators[0].(func(string) error)
	// eventDescAggregateType is the schema descriptor for aggregate_type field.
	eventDescAggregateType := eventFields[1].Descriptor()
	// event.AggregateTypeValidator is a validator for the "aggregate_type" field. It is called by the builders before save.
	event.AggregateTypeValidator = eventDescAggregateType.Validators[0].(func(string) error)
	// eventDescService is the schema descriptor for service field.
	eventDescService := eventFields[7].Descriptor()
	// event.ServiceValidator is a validator for the "service" field. It is called by the builders before save.
	event.ServiceValidator = eventDescService.Validators[0].(func(string) error)
	// eventDescCreateTime is the schema descriptor for create_time field.
	eventDescCreateTime := eventFields[8].Descriptor()
	// event.DefaultCreateTime holds the default value on creation for the create_time field.
	event.DefaultCreateTime = eventDescCreateTime.Default.(time.Time)
	// eventDescID is the schema descriptor for id field.
	eventDescID := eventMixinFields0[0].Descriptor()
	// event.IDValidator is a validator for the "id" field. It is called by the builders before save.
	event.IDValidator = eventDescID.Validators[0].(func(string) error)
}
